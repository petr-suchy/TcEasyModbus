<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.15">
  <POU Name="FB_MBusReadInputs" Id="{8fd554d6-80cf-4d4b-b2e4-68bdce0de03a}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_MBusReadInputs EXTENDS FB_MBusFunc
VAR_INPUT
	nNumOfInputs	: WORD;
	nStartAddr		: WORD;
END_VAR
VAR_OUTPUT
	bInput0			: BOOL;
	bInput1			: BOOL;
	bInput2			: BOOL;
	bInput3			: BOOL;
	bInput4			: BOOL;
	bInput5			: BOOL;
	bInput6			: BOOL;
	bInput7			: BOOL;
	bInput8			: BOOL;
	bInput9			: BOOL;
	bInput10		: BOOL;
	bInput11		: BOOL;
	bInput12		: BOOL;
	bInput13		: BOOL;
	bInput14		: BOOL;
	bInput15		: BOOL;
END_VAR
VAR
	fbMBReadInputs	: FB_MBReadInputs;
	aReadBuffer		: ARRAY[0..1] OF BYTE;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[SUPER^();
]]></ST>
    </Implementation>
    <Method Name="CallMBFunc" Id="{49c15619-db67-4c74-8631-c5218951cf2d}">
      <Declaration><![CDATA[METHOD PROTECTED  CallMBFunc
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fbMBReadInputs(
	bExecute := FALSE,
	bBusy=> stMBusStatus.bBusy, 
	bError=> stMBusStatus.bError, 
	nErrId=> stMBusStatus.nErrId
);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="ClearFBOutput" Id="{732c2c6c-08f3-4c2c-b629-f31bb617c4d3}">
      <Declaration><![CDATA[METHOD PROTECTED  ClearFBOutput
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[bInput0 := FALSE;
bInput1 := FALSE;
bInput2 := FALSE;
bInput3 := FALSE;
bInput4 := FALSE;
bInput5 := FALSE;
bInput6 := FALSE;
bInput7 := FALSE;
bInput8 := FALSE;
bInput9 := FALSE;
bInput10 := FALSE;
bInput11 := FALSE;
bInput12 := FALSE;
bInput13 := FALSE;
bInput14 := FALSE;
bInput15 := FALSE;

]]></ST>
      </Implementation>
    </Method>
    <Method Name="ReadFBInput" Id="{244cefeb-4bab-4a64-950b-a5babc78416c}">
      <Declaration><![CDATA[METHOD PROTECTED  ReadFBInput
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// Do nothing
]]></ST>
      </Implementation>
    </Method>
    <Method Name="TriggerMBFunc" Id="{a4e520f5-cd73-4937-83d8-97bb5596046c}">
      <Declaration><![CDATA[METHOD PROTECTED  TriggerMBFunc
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[fbMBReadInputs(
	sIPAddr:= stMBUSConnection.sIPAddr, 
	nTCPPort:= stMBUSConnection.nTCPPort, 
	nUnitID:= stMBUSConnection.nUnitID, 
	nQuantity:= nNumOfInputs, 
	nMBAddr:= nStartAddr, 
	cbLength:= SIZEOF(aReadBuffer), 
	pDestAddr:= ADR(aReadBuffer), 
	bExecute:= TRUE, 
	tTimeout:= stMBUSConnection.tTimeout, 
	bBusy=> stMBusStatus.bBusy, 
	bError=> stMBusStatus.bError, 
	nErrId=> stMBusStatus.nErrId, 
	cbRead=> );
]]></ST>
      </Implementation>
    </Method>
    <Method Name="WriteFBOutput" Id="{4bf830c4-a9a3-407e-adf3-5a7826ee1b89}">
      <Declaration><![CDATA[METHOD PROTECTED  WriteFBOutput
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[bInput0 := aReadBuffer[0].0;
bInput1 := aReadBuffer[0].1;
bInput2 := aReadBuffer[0].2;
bInput3 := aReadBuffer[0].3;
bInput4 := aReadBuffer[0].4;
bInput5 := aReadBuffer[0].5;
bInput6 := aReadBuffer[0].6;
bInput7 := aReadBuffer[0].7;
bInput8 := aReadBuffer[0].0;

bInput8 := aReadBuffer[1].0;
bInput9 := aReadBuffer[1].1;
bInput10 := aReadBuffer[1].2;
bInput11 := aReadBuffer[1].3;
bInput12 := aReadBuffer[1].4;
bInput13 := aReadBuffer[1].5;
bInput14 := aReadBuffer[1].6;
bInput15 := aReadBuffer[1].7;

]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>